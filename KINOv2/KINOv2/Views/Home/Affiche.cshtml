@using KINOv2.Models.MainModels
@{
    ViewData["Title"] = "Афиша";
}

<h2>@ViewData["Title"]</h2>
<h2>@ViewData["Message"]</h2>

<div >

    @if (User.IsInRole("Admin"))
    {
        <div class="row">
            @*<p><a class="btn btn-default col-md-2 col-md-offset-10" href="/Manage/FilmManage">Добавить фильм</a></p>*@
            <a asp-area="" asp-controller="Content" asp-action="FilmManage" class="btn btn-default">Добавить фильм</a>
        </div>

    }

    @foreach (Film film in ViewData["Films"] as IEnumerable<Film>)
    {
        <div class="row film">
            @{
                <div class="poster-image" style="background-image: url('@Url.Content("~/images/Posters/" + film.Poster)')"></div>
                <div class="film-info col-md-6">
                    <h3><a asp-area="" asp-controller="Home" asp-action="Film" asp-route-id="@film.LINK">@(film.Name + $"({film.ReleaseYear})")</a></h3>
                    <strong>Жанр: </strong><span>@film.Genre.Name</span><br />
                    <strong>Ограничение: </strong><span>@film.AgeLimit.Value</span><br />
                </div>
            }
        </div>
    }

    @*<form asp-controller="" asp-action=""
              data-ajax-begin="onBegin" data-ajax-complete="onComplete"
              data-ajax-failure="onFailed" data-ajax-success="onSuccess"
              data-ajax="true" data-ajax-method="POST">
            <input type="submit" value="Save" class="btn btn-primary" />
            <div id="Results"></div>
        </form>*@
        <nav>
            <page-link page-model=@(ViewData["PageView"] as PageViewModel) page-action="Affiche"></page-link>
        </nav>
    @(Html
            .Grid(ViewData["Films"] as IEnumerable<Film>)
            .Build(columns =>
            {
                columns.Add(m => m.Name).Titled("Name");
                columns.Add(model => model.Duration).Titled("Surname");

                columns.Add(model => model.Archived).Titled("Age");
                columns.Add(model => model.Poster).Titled("Birth date");
                columns.Add(model => model.LINK).Titled("Employed");
            })
            .Filterable()
            .Sortable()
            .Pageable()
    )
</div>
